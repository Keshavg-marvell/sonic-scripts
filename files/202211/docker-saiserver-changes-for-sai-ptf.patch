From eda3c794de5ca4d51715be022d1ea17fafbbe591 Mon Sep 17 00:00:00 2001
From: Pavan Naregundi <pnaregundi@marvell.com>
Date: Fri, 7 Apr 2023 12:47:41 +0000
Subject: docker saiserver changes for sai ptf

Saiserver v1 docker for SAI PTF:
make target/docker-saiserver-mrvl.gz

Saiserver v2 docker for SAI PTF:
make SAITHRIFT_V2=y target/docker-saiserverv2-mrvl.gz

Steps to start SAI Server in Sonic DUT:
Execute all these command in sonic switch bash terminal,
NOTE: Stop and disable all dockers except database dockers in sonic.
docker load -i ./docker-saiserver-mrvl.gz
SONIC_CFGGEN="sonic-cfggen"
SONIC_DB_CLI="sonic-db-cli"
PLATFORM=${PLATFORM:-`$SONIC_CFGGEN -H -v DEVICE_METADATA.localhost.platform`}
HWSKU=${HWSKU:-`$SONIC_CFGGEN -d -v 'DEVICE_METADATA["localhost"]["hwsku"]'`}
DOCKERNAME=saiserver
DOCKERIMG=docker-saiserver-mrvl
docker create --privileged --net=host -v /usr/share/sonic/device/$PLATFORM/$HWSKU:/usr/share/sonic/hwsku:ro --name=$DOCKERNAME $DOCKERIMG
docker start $DOCKERNAME
docker exec -ti saiserver bash
apt update
apt install libpython2.7
exit
docker stop $DOCKERNAME
docker start $DOCKERNAME
docker exec -ti saiserver bash
verify saiserver is running.
---
 .../marvell-arm64/docker-saiserver-mrvl.dep   | 10 ++++++
 .../marvell-arm64/docker-saiserver-mrvl.mk    |  7 ++--
 .../docker-saiserver-mrvl/Dockerfile.j2       | 32 +++++++++++++++++++
 .../docker-saiserver-mrvl/start.sh            |  7 ++++
 .../docker-saiserver-mrvl/supervisord.conf    | 28 ++++++++++++++++
 .../marvell-arm64/docker-syncd-mrvl-rpc.mk    |  2 ++
 platform/marvell-arm64/libsaithrift-dev.dep   | 11 +++++++
 platform/marvell-arm64/libsaithrift-dev.mk    | 23 +++++++++----
 rules/config                                  |  2 +-
 9 files changed, 111 insertions(+), 11 deletions(-)
 create mode 100644 platform/marvell-arm64/docker-saiserver-mrvl.dep
 create mode 100644 platform/marvell-arm64/docker-saiserver-mrvl/Dockerfile.j2
 create mode 100755 platform/marvell-arm64/docker-saiserver-mrvl/start.sh
 create mode 100644 platform/marvell-arm64/docker-saiserver-mrvl/supervisord.conf
 create mode 100644 platform/marvell-arm64/libsaithrift-dev.dep

diff --git a/platform/marvell-arm64/docker-saiserver-mrvl.dep b/platform/marvell-arm64/docker-saiserver-mrvl.dep
new file mode 100644
index 000000000..6eeaa55a3
--- /dev/null
+++ b/platform/marvell-arm64/docker-saiserver-mrvl.dep
@@ -0,0 +1,10 @@
+
+DPATH       := $($(DOCKER_SAISERVER_MRVL)_PATH)
+DEP_FILES   := $(SONIC_COMMON_FILES_LIST) platform/marvell-arm64/docker-saiserver-mrvl.mk platform/marvell-arm64/docker-saiserver-mrvl.dep
+DEP_FILES   += $(SONIC_COMMON_BASE_FILES_LIST)
+DEP_FILES   += $(shell git ls-files $(DPATH))
+
+$(DOCKER_SAISERVER_MRVL)_CACHE_MODE  := GIT_CONTENT_SHA
+$(DOCKER_SAISERVER_MRVL)_DEP_FLAGS   := $(SONIC_COMMON_FLAGS_LIST)
+$(DOCKER_SAISERVER_MRVL)_DEP_FILES   := $(DEP_FILES)
+
diff --git a/platform/marvell-arm64/docker-saiserver-mrvl.mk b/platform/marvell-arm64/docker-saiserver-mrvl.mk
index 90bb5ae99..1be30ae34 100644
--- a/platform/marvell-arm64/docker-saiserver-mrvl.mk
+++ b/platform/marvell-arm64/docker-saiserver-mrvl.mk
@@ -1,12 +1,13 @@
 # docker image for mrvl saiserver
 
-DOCKER_SAISERVER_MRVL = docker-saiserver-mrvl.gz
+DOCKER_SAISERVER_MRVL = docker-saiserver$(SAITHRIFT_VER)-mrvl.gz
 $(DOCKER_SAISERVER_MRVL)_PATH = $(PLATFORM_PATH)/docker-saiserver-mrvl
 $(DOCKER_SAISERVER_MRVL)_DEPENDS += $(SAISERVER)
-$(DOCKER_SAISERVER_MRVL)_LOAD_DOCKERS += $(DOCKER_CONFIG_ENGINE_BUSTER)
+$(DOCKER_SAISERVER_MRVL)_LOAD_DOCKERS += $(DOCKER_CONFIG_ENGINE_BULLSEYE)
 SONIC_DOCKER_IMAGES += $(DOCKER_SAISERVER_MRVL)
+SONIC_BULLSEYE_DOCKERS += $(DOCKER_SAISERVER_MRVL)
 
-$(DOCKER_SAISERVER_MRVL)_CONTAINER_NAME = saiserver
+$(DOCKER_SAISERVER_MRVL)_CONTAINER_NAME = saiserver$(SAITHRIFT_VER)
 $(DOCKER_SAISERVER_MRVL)_RUN_OPT += --privileged -t
 $(DOCKER_SAISERVER_MRVL)_RUN_OPT += -v /host/machine.conf:/etc/machine.conf
 $(DOCKER_SAISERVER_MRVL)_RUN_OPT += -v /var/run/docker-saiserver:/var/run/sswsyncd
diff --git a/platform/marvell-arm64/docker-saiserver-mrvl/Dockerfile.j2 b/platform/marvell-arm64/docker-saiserver-mrvl/Dockerfile.j2
new file mode 100644
index 000000000..1a414efd9
--- /dev/null
+++ b/platform/marvell-arm64/docker-saiserver-mrvl/Dockerfile.j2
@@ -0,0 +1,32 @@
+FROM docker-config-engine-bullseye-{{DOCKER_USERNAME}}:{{DOCKER_USERTAG}}
+
+ARG docker_container_name
+
+## Make apt-get non-interactive
+ENV DEBIAN_FRONTEND=noninteractive
+
+RUN apt-get update              \
+ && apt-get -y install          \
+      libboost-atomic1.74.0     \
+      libqt5core5a              \
+      libqt5network5
+
+COPY \
+{% for deb in docker_saiserver_mrvl_debs.split(' ') -%}
+debs/{{ deb }}{{' '}}
+{%- endfor -%}
+debs/
+
+RUN dpkg_apt() { [ -f $1 ] && { dpkg -i $1 || apt-get -y install -f; } || return 1; } ; \
+{% for deb in docker_saiserver_mrvl_debs.split(' ') -%}
+dpkg_apt debs/{{ deb }}{{'; '}}
+{%- endfor %}
+
+COPY ["start.sh", "/usr/bin/"]
+COPY ["supervisord.conf", "/etc/supervisor/conf.d/"]
+
+## Clean up
+RUN apt-get clean -y; apt-get autoclean -y; apt-get autoremove -y
+RUN rm -rf /debs
+
+ENTRYPOINT ["/usr/local/bin/supervisord"]
diff --git a/platform/marvell-arm64/docker-saiserver-mrvl/start.sh b/platform/marvell-arm64/docker-saiserver-mrvl/start.sh
new file mode 100755
index 000000000..09cc0ddb5
--- /dev/null
+++ b/platform/marvell-arm64/docker-saiserver-mrvl/start.sh
@@ -0,0 +1,7 @@
+#!/usr/bin/env bash
+
+rm -f /var/run/rsyslogd.pid
+
+supervisorctl start rsyslogd
+
+supervisorctl start saiserver
diff --git a/platform/marvell-arm64/docker-saiserver-mrvl/supervisord.conf b/platform/marvell-arm64/docker-saiserver-mrvl/supervisord.conf
new file mode 100644
index 000000000..ccb107b3d
--- /dev/null
+++ b/platform/marvell-arm64/docker-saiserver-mrvl/supervisord.conf
@@ -0,0 +1,28 @@
+[supervisord]
+logfile_maxbytes=1MB
+logfile_backups=2
+nodaemon=true
+
+[program:start.sh]
+command=/usr/bin/start.sh
+priority=1
+autostart=true
+autorestart=false
+stdout_logfile=syslog
+stderr_logfile=syslog
+
+[program:rsyslogd]
+command=/usr/sbin/rsyslogd -n
+priority=2
+autostart=false
+autorestart=false
+stdout_logfile=syslog
+stderr_logfile=syslog
+
+[program:saiserver]
+command=/usr/sbin/saiserver -p /usr/share/sonic/hwsku/sai.profile -f /usr/share/sonic/hwsku/port_config.ini
+priority=3
+autostart=false
+autorestart=false
+stdout_logfile=syslog
+stderr_logfile=syslog
diff --git a/platform/marvell-arm64/docker-syncd-mrvl-rpc.mk b/platform/marvell-arm64/docker-syncd-mrvl-rpc.mk
index 20698efdf..587902336 100644
--- a/platform/marvell-arm64/docker-syncd-mrvl-rpc.mk
+++ b/platform/marvell-arm64/docker-syncd-mrvl-rpc.mk
@@ -23,3 +23,5 @@ $(DOCKER_SYNCD_MRVL_RPC)_RUN_OPT += --privileged -t
 $(DOCKER_SYNCD_MRVL_RPC)_RUN_OPT += -v /host/machine.conf:/etc/machine.conf
 $(DOCKER_SYNCD_MRVL_RPC)_RUN_OPT += -v /etc/sonic:/etc/sonic:ro
 $(DOCKER_SYNCD_MRVL_RPC)_RUN_OPT += -v /host/warmboot:/var/warmboot
+
+SONIC_BULLSEYE_DOCKERS += $(DOCKER_SYNCD_MRVL_RPC)
diff --git a/platform/marvell-arm64/libsaithrift-dev.dep b/platform/marvell-arm64/libsaithrift-dev.dep
new file mode 100644
index 000000000..c2a83c71d
--- /dev/null
+++ b/platform/marvell-arm64/libsaithrift-dev.dep
@@ -0,0 +1,11 @@
+SPATH       := $($(LIBSAITHRIFT_DEV)_SRC_PATH)
+DEP_FILES   := $(SONIC_COMMON_FILES_LIST) platform/marvell-arm64/libsaithrift-dev.mk platform/marvell-arm64/libsaithrift-dev.dep   
+DEP_FILES   += $(SONIC_COMMON_BASE_FILES_LIST)
+SMDEP_PATHS := $(SPATH)  $(SPATH)/bm/behavioral-model  $(SPATH)/test/ptf  $(SPATH)/test/saithrift/ctypesgen
+$(foreach path, $(SMDEP_PATHS), $(eval $(path) :=$(filter-out $(SMDEP_PATHS),$(addprefix $(path)/, $(shell cd $(path) &&  git ls-files | grep -Ev " " )))))
+
+$(LIBSAITHRIFT_DEV)_CACHE_MODE  := GIT_CONTENT_SHA 
+$(LIBSAITHRIFT_DEV)_DEP_FLAGS   := $(SONIC_COMMON_FLAGS_LIST)
+$(LIBSAITHRIFT_DEV)_DEP_FILES   := $(DEP_FILES)
+$(LIBSAITHRIFT_DEV)_SMDEP_FILES := $(foreach path, $(SMDEP_PATHS), $($(path)))
+$(LIBSAITHRIFT_DEV)_SMDEP_PATHS := $(SMDEP_PATHS)
diff --git a/platform/marvell-arm64/libsaithrift-dev.mk b/platform/marvell-arm64/libsaithrift-dev.mk
index e1c3da156..fab95eaf2 100644
--- a/platform/marvell-arm64/libsaithrift-dev.mk
+++ b/platform/marvell-arm64/libsaithrift-dev.mk
@@ -2,19 +2,28 @@
 
 SAI_VER = 0.9.4
 
-LIBSAITHRIFT_DEV = libsaithrift-dev_$(SAI_VER)_$(CONFIGURED_ARCH).deb
+LIBSAITHRIFT_DEV = libsaithrift$(SAITHRIFT_VER)-dev_$(SAI_VER)_$(CONFIGURED_ARCH).deb
 $(LIBSAITHRIFT_DEV)_SRC_PATH = $(SRC_PATH)/sonic-sairedis/SAI
-$(LIBSAITHRIFT_DEV)_DEPENDS += $(LIBTHRIFT) $(LIBTHRIFT_DEV) $(PYTHON_THRIFT) $(THRIFT_COMPILER) $(MRVL_FPA) $(MRVL_SAI)
-$(LIBSAITHRIFT_DEV)_RDEPENDS += $(LIBTHRIFT) $(MRVL_SAI)
+#Support two different versions of thrift
+ifeq ($(SAITHRIFT_V2),y)
+$(LIBSAITHRIFT_DEV)_DEPENDS += $(LIBTHRIFT_0_14_1) $(LIBTHRIFT_0_14_1_DEV) $(PYTHON3_THRIFT_0_14_1) $(THRIFT_0_14_1_COMPILER)
+$(LIBSAITHRIFT_DEV)_RDEPENDS += $(LIBTHRIFT_0_14_1)
+$(LIBSAITHRIFT_DEV)_BUILD_ENV = SAITHRIFTV2=true SAITHRIFT_VER=v2
+else
+$(LIBSAITHRIFT_DEV)_DEPENDS += $(LIBTHRIFT) $(LIBTHRIFT_DEV) $(PYTHON_THRIFT) $(THRIFT_COMPILER)
+$(LIBSAITHRIFT_DEV)_RDEPENDS += $(LIBTHRIFT)
+endif
+$(LIBSAITHRIFT_DEV)_DEPENDS += $(MRVL_FPA) $(MRVL_SAI) $(LIBSAIMETADATA) $(LIBSAIMETADATA_DEV)
+$(LIBSAITHRIFT_DEV)_RDEPENDS += $(MRVL_SAI) $(LIBSAIMETADATA)
 SONIC_DPKG_DEBS += $(LIBSAITHRIFT_DEV)
 
-PYTHON_SAITHRIFT = python-saithrift_$(SAI_VER)_$(CONFIGURED_ARCH).deb
+PYTHON_SAITHRIFT = python-saithrift$(SAITHRIFT_VER)_$(SAI_VER)_$(CONFIGURED_ARCH).deb
 $(eval $(call add_extra_package,$(LIBSAITHRIFT_DEV),$(PYTHON_SAITHRIFT)))
 
-SAISERVER = saiserver_$(SAI_VER)_$(CONFIGURED_ARCH).deb
-$(SAISERVER)_RDEPENDS += $(LIBTHRIFT) $(MRVL_SAI)
+SAISERVER = saiserver$(SAITHRIFT_VER)_$(SAI_VER)_$(CONFIGURED_ARCH).deb
+$(SAISERVER)_RDEPENDS += $(LIBSAITHRIFT_DEV)
 $(eval $(call add_extra_package,$(LIBSAITHRIFT_DEV),$(SAISERVER)))
 
-SAISERVER_DBG = saiserver-dbg_$(SAI_VER)_$(CONFIGURED_ARCH).deb
+SAISERVER_DBG = saiserver$(SAITHRIFT_VER)-dbg_$(SAI_VER)_$(CONFIGURED_ARCH).deb
 $(SAISERVER_DBG)_RDEPENDS += $(SAISERVER)
 $(eval $(call add_extra_package,$(LIBSAITHRIFT_DEV),$(SAISERVER_DBG)))
diff --git a/rules/config b/rules/config
index c3a58f96d..c2c78f8bd 100644
--- a/rules/config
+++ b/rules/config
@@ -82,7 +82,7 @@ SONIC_ROUTING_STACK = frr
 
 # ENABLE_SYNCD_RPC - build docker-syncd with rpc packages for testing purposes.
 # Uncomment to enable:
-# ENABLE_SYNCD_RPC = y
+ENABLE_SYNCD_RPC = y
 
 # Enable Origanization Extensions - Specific to the deployment scenarios of the Organization
 ENABLE_ORGANIZATION_EXTENSIONS = y
-- 
2.25.1

