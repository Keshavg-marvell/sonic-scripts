From 6e2aca5e9fa524fe90e0de2b18f5dc709e5a4703 Mon Sep 17 00:00:00 2001
From: Pavan Naregundi <pnaregundi@marvell.com>
Date: Mon, 16 Oct 2023 07:27:47 +0000
Subject: Add platform support for rd98DX35xx

This change adds following two variants of rd98DX35xx board to arm64
build.

Board with CPU integrated into the 98DX35xx switching chip:

 Platform: arm64-marvell_rd98DX35xx-r0
 HwSKU: rd98DX35xx
 ASIC: marvell
 Port Config: 32x1G + 16x2.5G + 6x25G

Board with external CN9131 CPU connected over PCI to 98DX35xx
switching chip:

 Platform: arm64-marvell_rd98DX35xx_cn9131-r0
 HwSKU: rd98DX35xx_cn9131
 ASIC: marvell
 Port Config: 32x1G + 16x2.5G + 6x25G

Signed-off-by: Pavan Naregundi <pnaregundi@marvell.com>
---
 .gitmodules                                   |   3 +
 files/initramfs-tools/modules.arm             |   1 +
 platform/marvell-arm64/one-image.mk           |   2 +
 platform/marvell-arm64/platform-marvell.mk    |  18 ++
 platform/marvell-arm64/platform.conf          | 259 +++++++++---------
 platform/marvell-arm64/rules.mk               |   1 +
 platform/marvell-arm64/sonic-platform-marvell |   1 +
 platform/marvell-arm64/sonic_fit.its          |  84 ++++--
 8 files changed, 229 insertions(+), 140 deletions(-)
 create mode 100644 platform/marvell-arm64/platform-marvell.mk
 create mode 160000 platform/marvell-arm64/sonic-platform-marvell

diff --git a/.gitmodules b/.gitmodules
index 73572e25b..5461fcffc 100644
--- a/.gitmodules
+++ b/.gitmodules
@@ -117,3 +117,6 @@
 [submodule "platform/marvell-arm64/mrvl-prestera"]
 	path = platform/marvell-arm64/mrvl-prestera
 	url = https://github.com/Marvell-switching/mrvl-prestera.git
+[submodule "platform/marvell-arm64/sonic-platform-marvell"]
+	path = platform/marvell-arm64/sonic-platform-marvell
+	url = https://github.com/Marvell-switching/sonic-platform-arm64.git
diff --git a/files/initramfs-tools/modules.arm b/files/initramfs-tools/modules.arm
index 074105195..83816e075 100644
--- a/files/initramfs-tools/modules.arm
+++ b/files/initramfs-tools/modules.arm
@@ -12,3 +12,4 @@ ofpart
 mtdswap
 mtd_blkdevs
 adt7475
+i2c-dev
\ No newline at end of file
diff --git a/platform/marvell-arm64/one-image.mk b/platform/marvell-arm64/one-image.mk
index a0c8780c3..5ae916778 100644
--- a/platform/marvell-arm64/one-image.mk
+++ b/platform/marvell-arm64/one-image.mk
@@ -5,6 +5,8 @@ $(SONIC_ONE_IMAGE)_MACHINE = marvell-arm64
 $(SONIC_ONE_IMAGE)_IMAGE_TYPE = onie
 $(SONIC_ONE_IMAGE)_INSTALLS += $(SYSTEMD_SONIC_GENERATOR)
 $(SONIC_ONE_IMAGE)_INSTALLS += $(MRVL_PRESTERA_DEB)
+$(SONIC_ONE_IMAGE)_LAZY_INSTALLS += $(AC5X_RD98DX35xx_PLATFORM) \
+                                $(AC5X_RD98DX35xxCN9131_PLATFORM)
 ifeq ($(INSTALL_DEBUG_TOOLS),y)
 $(SONIC_ONE_IMAGE)_DOCKERS += $(SONIC_INSTALL_DOCKER_DBG_IMAGES)
 $(SONIC_ONE_IMAGE)_DOCKERS += $(filter-out $(patsubst %-$(DBG_IMAGE_MARK).gz,%.gz, $(SONIC_INSTALL_DOCKER_DBG_IMAGES)), $(SONIC_INSTALL_DOCKER_IMAGES))
diff --git a/platform/marvell-arm64/platform-marvell.mk b/platform/marvell-arm64/platform-marvell.mk
new file mode 100644
index 000000000..3f2ba3df0
--- /dev/null
+++ b/platform/marvell-arm64/platform-marvell.mk
@@ -0,0 +1,18 @@
+# Marvell Platform modules
+
+AC5X_RD98DX35xx_PLATFORM_MODULE_VERSION = 1.0
+AC5X_RD98DX35xxCN9131_PLATFORM_MODULE_VERSION = 1.0
+
+export AC5X_RD98DX35xx_PLATFORM_MODULE_VERSION
+export AC5X_RD98DX35xxCN9131_PLATFORM_MODULE_VERSION
+
+AC5X_RD98DX35xx_PLATFORM = sonic-platform-rd98dx35xx_$(AC5X_RD98DX35xx_PLATFORM_MODULE_VERSION)_$(CONFIGURED_ARCH).deb
+$(AC5X_RD98DX35xx_PLATFORM)_SRC_PATH = $(PLATFORM_PATH)/sonic-platform-marvell
+$(AC5X_RD98DX35xx_PLATFORM)_DEPENDS += $(LINUX_HEADERS) $(LINUX_HEADERS_COMMON)
+$(AC5X_RD98DX35xx_PLATFORM)_PLATFORM = arm64-marvell_rd98DX35xx-r0
+SONIC_DPKG_DEBS += $(AC5X_RD98DX35xx_PLATFORM)
+
+AC5X_RD98DX35xxCN9131_PLATFORM = sonic-platform-rd98dx35xx-cn9131_$(AC5X_RD98DX35xxCN9131_PLATFORM_MODULE_VERSION)_$(CONFIGURED_ARCH).deb
+$(AC5X_RD98DX35xxCN9131_PLATFORM)_PLATFORM = arm64-marvell_rd98DX35xx_cn9131-r0
+$(eval $(call add_extra_package,$(AC5X_RD98DX35xx_PLATFORM),$(AC5X_RD98DX35xxCN9131_PLATFORM)))
+
diff --git a/platform/marvell-arm64/platform.conf b/platform/marvell-arm64/platform.conf
index 4ef62d36b..8f45a0f21 100644
--- a/platform/marvell-arm64/platform.conf
+++ b/platform/marvell-arm64/platform.conf
@@ -4,30 +4,142 @@
 
 echo "Preparing for installation ... "
 
-IS_MASS=0
 # global defines
-kernel_addr=0x1100000
-fdt_addr=0x1000000
-fit_addr=0x1000000
-initrd_addr=0x2000000
 VAR_LOG=512
-DISK_SIZE=9
+UBOOT_FW_DEFAULT=1
 
-kernel_fname="/boot/vmlinuz-4.9.0-9-2-arm64"
-initrd_fname="/boot/initrd.img-4.9.0-9-2-arm64"
-fdt_fname="/boot/armada-7020-comexpress.dtb"
+kernel_addr=0x1100000
+kernel_version=5.10.0-18-2-arm64
+kernel_fname="/boot/vmlinuz-$kernel_version"
+initrd_fname="/boot/initrd.img-$kernel_version"
 fit_fname="/boot/sonic_arm64.fit"
+demo_volume_label=SONiC-OS
 
 # global mount defines
-#demo_dev=/dev/sda1
 demo_mnt=/tmp
-#mtd_dev=/dev/$(cat /proc/mtd | grep "ENV" | grep -o "mtd[0-9]")
-FW_ENV_DEFAULT='/dev/mtd1 0x0 0x10000 0x100000'
-UBOOT_FW_DEFAULT=1
+
+if [ "$install_env" = "onie" ]; then
+    MACH_FILE="/etc/machine.conf"
+else
+    MACH_FILE="/host/machine.conf"
+fi
+
+PLATFORM=`sed -n 's/^onie_platform=\(.*\)/\1/p' $MACH_FILE`
+echo "Intalling SONiC from $install_env on Platform $PLATFORM"
+
+PLATFORM_AC5X=0
+PLATFORM_CN9131=0
+
+case $PLATFORM in
+    arm64-marvell_rd98DX35xx-r0) PLATFORM_AC5X=1;
+		fdt_fname="/usr/lib/linux-image-$kernel_version/marvell/ac5-98dx35xx-rd.dtb";
+		fit_conf_name="#conf_ac5x";;
+    arm64-marvell_rd98DX35xx_cn9131-r0) PLATFORM_CN9131=1;
+		fdt_fname="/boot/cn9131-db-comexpress.dtb";
+		fit_conf_name="#conf_cn9131";;
+esac
+
+if [ $PLATFORM_AC5X -eq 1 ]; then
+    fdt_addr=0x201000000
+    fit_addr=0x210000000
+    initrd_addr=0x206000000
+
+    FW_ENV_DEFAULT='/dev/mtd0 0x400000 0x10000 0x10000'
+    demo_part=2
+    mmc_bus="mmc0:0001"
+elif [ $PLATFORM_CN9131 -eq 1 ]; then
+    fdt_addr=0x1000000
+    fit_addr=0x8000000
+    initrd_addr=0x2000000
+    demo_part=2
+    FW_ENV_DEFAULT='/dev/mtd1 0x1F0000 0x10000 0x10000'
+    mmc_bus="mmc0:0001"
+else
+    fdt_addr=0x1000000
+    fit_addr=0x8000000
+    initrd_addr=0x2000000
+
+    fdt_fname="/usr/lib/linux-image-$kernel_version/marvell/armada-7020-comexpress.dtb"
+
+    FW_ENV_DEFAULT='/dev/mtd1 0x0 0x10000 0x100000'
+    demo_part=1
+    mmc_bus="mmc0:aaaa"
+fi
 
 # Skip VID Header in UBIFS
 LINUX_MISC_CMD='apparmor=1 security=apparmor usbcore.autosuspend=-1'
 
+#Get block device
+#Default block device is eMMC, if not look for usb storage
+get_install_device()
+{
+    for i in 0 1 2 ; do
+        if $(ls -l /sys/block/mmcblk$i/device 2>/dev/null | grep -q "$mmc_bus") ; then
+            echo "/dev/mmcblk$i"
+            blk_dev=/dev/mmcblk$i
+            echo "Selected mmc $blk_dev"
+            return 0
+        fi
+    done
+
+    echo "ERROR storage not found"
+    return 1
+}
+
+get_install_device
+if [ $? -ne 0 ]; then
+    echo "Error: Unable to detect $blk_dev $demo_dev"
+    exit 1
+fi
+
+demo_dev=${blk_dev}p${demo_part}
+
+remove_dev_partitions() {
+    echo "Remove all existing partitions starting partnum: ${demo_part} from ${blk_dev}"
+    local dev_to_install=${blk_dev}p
+    for p in $(seq ${demo_part} 9) ; do
+        if [[ -e ${dev_to_install}${p} ]]; then
+            echo "Removing partition ${dev_to_install}${p}"
+            sgdisk -d ${p} ${blk_dev} || true
+        fi
+    done
+    partprobe ${blk_dev}
+}
+
+create_demo_partition() {
+    # SD CARD
+    remove_dev_partitions
+
+    # Create sonic partition
+    sgdisk --new ${demo_part}:: \
+        --change-name=${demo_part}:${demo_volume_label} \
+        --typecode=${demo_part}:8300 -p ${blk_dev}
+
+    partprobe
+}
+
+create_partition() {
+    get_install_device
+    if [ $? -ne 0 ]; then
+        echo "Error: Unable to detect $blk_dev $demo_dev"
+        exit 1
+    fi
+
+    # Platform specific partition 
+    create_demo_partition
+}
+
+mount_partition() {
+    # Make filesystem
+    echo "demo label: $demo_volume_label. $demo_dev..."
+    mkfs.ext4 -L $demo_volume_label $demo_dev
+
+    mount -t ext4 -o defaults,rw $demo_dev $demo_mnt || {
+        echo "Error: Unable to mount $demo_dev on $demo_mnt"
+        exit 1
+    }
+}
+
 prepare_boot_menu() {
     echo "Sync up cache ..."
     sync
@@ -72,21 +184,6 @@ prepare_boot_menu() {
         fdt_name_old=$(fw_printenv -n fdt_name || true)
         fit_name_old=$(fw_printenv -n fit_name || true)
         sonic_version_2=$(fw_printenv -n sonic_version_1 || true)
-        if [ -z "$demo_dev" ] 
-        then 
-            get_install_device
-            if [ $? -ne 0 ]; then
-                echo "Error: Unable to detect $blk_dev $demo_dev"
-                exit 1
-            fi
-            if [ ${IS_MASS} -eq 1 ]
-            then
-                demo_dev=${blk_dev}1
-            else
-                #demo_dev=$(echo $blk_dev | sed -e 's/\(mmcblk[0-9]\)/\1p/')$demo_part
-                demo_dev=/dev/mmcblk0p1
-            fi
-        fi
     fi
 
     # Set boot variables
@@ -104,37 +201,28 @@ prepare_boot_menu() {
     fw_setenv ${FW_ARG} sonic_version_2 $sonic_version_2 > /dev/null
     BOOT1='echo " > Boot1: $sonic_version_1 - run sonic_image_1";echo;'
     BOOT2='echo " > Boot2: $sonic_version_2 - run sonic_image_2";echo;'
-    BOOT3='echo " > Boot3: ONIE - run onie-nand-boot";echo;'
+    BOOT3='echo " > Boot3: ONIE - run onie_boot";echo;'
     BORDER='echo "---------------------------------------------------";echo;'
     fw_setenv ${FW_ARG} print_menu $BORDER $BOOT1 $BOOT2 $BOOT3 $BORDER > /dev/null
 
-    fw_setenv ${FW_ARG} linuxargs "net.ifnames=0 loopfstype=squashfs loop=$image_dir/$FILESYSTEM_SQUASHFS systemd.unified_cgroup_hierarchy=0 varlog_size=$VAR_LOG ${extra_cmdline_linux}" > /dev/null
-    fw_setenv ${FW_ARG} linuxargs_old "net.ifnames=0 loopfstype=squashfs loop=$image_dir_old/$FILESYSTEM_SQUASHFS systemd.unified_cgroup_hierarchy=0 varlog_size=$VAR_LOG" > /dev/null
-    sonic_bootargs_old='setenv bootargs root='$demo_dev' rw rootwait rootfstype=ext4 panic=1 console=ttyS0,115200 ${othbootargs} ${mtdparts} ${linuxargs_old}'
+    fw_setenv ${FW_ARG} linuxargs "net.ifnames=0 loopfstype=squashfs loop=$image_dir/$FILESYSTEM_SQUASHFS systemd.unified_cgroup_hierarchy=0 varlog_size=$VAR_LOG ${ONIE_PLATFORM_EXTRA_CMDLINE_LINUX}" > /dev/null
+    fw_setenv ${FW_ARG} linuxargs_old "net.ifnames=0 loopfstype=squashfs loop=$image_dir_old/$FILESYSTEM_SQUASHFS systemd.unified_cgroup_hierarchy=0 varlog_size=$VAR_LOG ${ONIE_PLATFORM_EXTRA_CMDLINE_LINUX}" > /dev/null
+    sonic_bootargs_old='setenv bootargs root='$demo_dev' rw rootwait rootfstype=ext4 panic=1 console=ttyS0,${baudrate} ${othbootargs} ${mtdparts} ${linuxargs_old}'
     fw_setenv ${FW_ARG} sonic_bootargs_old $sonic_bootargs_old > /dev/null || true
     sonic_boot_load_old=$(fw_printenv -n sonic_boot_load || true)
     old_str="_old"
-    fw_setenv ${FW_ARG} sonic_boot_load_old $sonic_boot_load_old$old_str > /dev/null || true
+    fw_setenv ${FW_ARG} sonic_boot_load_old "$sonic_boot_load_old$old_str" > /dev/null || true
 
     fw_setenv ${FW_ARG} kernel_addr $kernel_addr > /dev/null
     fw_setenv ${FW_ARG} fdt_addr $fdt_addr > /dev/null
     fw_setenv ${FW_ARG} fit_addr $fit_addr > /dev/null
+    fw_setenv ${FW_ARG} fit_conf_name $fit_conf_name > /dev/null
     fw_setenv ${FW_ARG} initrd_addr $initrd_addr > /dev/null
-    # Set boot configs
-    if [ ${IS_MASS} -eq 1 ]
-    then
-        #USB_LOAD='ext4load usb 0 $kernel_addr $image_name; ext4load usb 0 $fdt_addr $fdt_name; ext4load usb 0 $initrd_addr $initrd_name'
-        USB_LOAD='ext4load usb 0 $fit_addr $fit_name'
-        fw_setenv ${FW_ARG} sonic_boot_load $USB_LOAD > /dev/null
-    else
-        #MMC_LOAD='ext4load mmc 0:'$demo_part' $kernel_addr $image_name; ext4load mmc 0:'$demo_part' $fdt_addr $fdt_name; ext4load mmc 0:'$demo_part' $initrd_addr $initrd_name'
-        MMC_LOAD='ext4load mmc 0:'$demo_part' $fit_addr $fit_name'
-        fw_setenv ${FW_ARG} sonic_boot_load $MMC_LOAD > /dev/null
-    fi
-    #SONIC_BOOT_CMD='run sonic_bootargs; run sonic_boot_load; booti $kernel_addr $initrd_addr $fdt_addr'
-    SONIC_BOOT_CMD='run sonic_bootargs; run sonic_boot_load; bootm $fit_addr'
-    SONIC_BOOT_CMD_OLD='run sonic_bootargs_old; run sonic_boot_load_old; bootm $fit_addr'
-    BOOTARGS='setenv bootargs root='$demo_dev' rw rootwait rootfstype=ext4 panic=1 console=ttyS0,115200 ${othbootargs} ${mtdparts} ${linuxargs}'
+    MMC_LOAD='ext4load mmc 0:'$demo_part' $fit_addr $fit_name'
+    fw_setenv ${FW_ARG} sonic_boot_load "$MMC_LOAD" > /dev/null
+    SONIC_BOOT_CMD='run sonic_bootargs; run sonic_boot_load; bootm $fit_addr${fit_conf_name}'
+    SONIC_BOOT_CMD_OLD='run sonic_bootargs_old; run sonic_boot_load_old; bootm $fit_addr${fit_conf_name}'
+    BOOTARGS='setenv bootargs root='$demo_dev' rw rootwait rootfstype=ext4 panic=1 console=ttyS0,${baudrate} ${othbootargs} ${mtdparts} ${linuxargs}'
     fw_setenv ${FW_ARG} sonic_bootargs $BOOTARGS > /dev/null
     fw_setenv ${FW_ARG} sonic_bootcmd $SONIC_BOOT_CMD > /dev/null
     fw_setenv ${FW_ARG} sonic_image_2 $SONIC_BOOT_CMD_OLD > /dev/null
@@ -144,81 +232,6 @@ prepare_boot_menu() {
 
 }
 
-#Get block device
-#Default block device is eMMC, if not look for usb storage
-get_install_device()
-{
-    mass_bus="target0:0:0"
-    for i in a b c ; do
-        if $(ls -l /sys/block/sd$i/device 2>/dev/null | grep -q "$mass_bus") ; then
-            echo "/dev/sd$i"
-            blk_dev=/dev/sd$i
-            IS_MASS=1
-            echo "Selected Mass storage $blk_dev"
-            return 0
-        fi
-    done
-    mmc_bus="mmc0:aaaa"
-    for i in 0 1 2 ; do
-        if $(ls -l /sys/block/mmcblk$i/device 2>/dev/null | grep -q "$mmc_bus") ; then
-            echo "/dev/mmcblk$i"
-            blk_dev=/dev/mmcblk$i
-            echo "Selected mmc $blk_dev"
-            return 0
-        fi
-    done
-
-    echo "ERROR storage not found"
-    return 1
-}
-
-create_demo_partition() {
-
-    if [ ${IS_MASS} -eq 1 ]
-    then
-        # USB drive
-        parted -s $blk_dev rm 1 || true
-        partprobe || true
-        parted -s --align optimal $blk_dev unit gb mkpart primary 1 $DISK_SIZE || true
-        partprobe || true
-    else
-        # SD CARD
-        parted -s /dev/mmcblk0 rm 1
-        partprobe
-        parted -s --align optimal /dev/mmcblk0 unit gb mkpart primary 1 $DISK_SIZE
-        partprobe
-    fi
-}
-
-create_partition() {
-    get_install_device
-    if [ $? -ne 0 ]; then
-        echo "Error: Unable to detect $blk_dev $demo_dev"
-        exit 1
-    fi
-    # Platform specific partition 
-    create_demo_partition
-}
-
-mount_partition() {
-    if [ ${IS_MASS} -eq 1 ]
-    then
-        demo_dev=${blk_dev}1
-    else
-        #demo_dev=$(echo $blk_dev | sed -e 's/\(mmcblk[0-9]\)/\1p/')$demo_part
-        demo_dev=/dev/mmcblk0p1
-    fi
-
-    # Make filesystem
-    echo "demo label: $demo_volume_label. $demo_dev..."
-    mkfs.ext4 -L $demo_volume_label $demo_dev
-
-    mount -t ext4 -o defaults,rw $demo_dev $demo_mnt || {
-        echo "Error: Unable to mount $demo_dev on $demo_mnt"
-        exit 1
-    }
-}
-
 bootloader_menu_config() {
     # Update uboot Environment
     prepare_boot_menu
diff --git a/platform/marvell-arm64/rules.mk b/platform/marvell-arm64/rules.mk
index 86fbdc945..fb9014161 100644
--- a/platform/marvell-arm64/rules.mk
+++ b/platform/marvell-arm64/rules.mk
@@ -6,6 +6,7 @@ include $(PLATFORM_PATH)/docker-saiserver-mrvl.mk
 include $(PLATFORM_PATH)/libsaithrift-dev.mk
 include $(PLATFORM_PATH)/one-image.mk
 include $(PLATFORM_PATH)/mrvl-prestera.mk
+include $(PLATFORM_PATH)/platform-marvell.mk
 
 SONIC_ALL += $(SONIC_ONE_IMAGE) \
              $(DOCKER_FPM) 	\
diff --git a/platform/marvell-arm64/sonic-platform-marvell b/platform/marvell-arm64/sonic-platform-marvell
new file mode 160000
index 000000000..c108e5e38
--- /dev/null
+++ b/platform/marvell-arm64/sonic-platform-marvell
@@ -0,0 +1 @@
+Subproject commit c108e5e38e65d4d44520c52079a95a0a9262d6cc
diff --git a/platform/marvell-arm64/sonic_fit.its b/platform/marvell-arm64/sonic_fit.its
index 9b09d4cd3..224fa63fc 100644
--- a/platform/marvell-arm64/sonic_fit.its
+++ b/platform/marvell-arm64/sonic_fit.its
@@ -5,51 +5,101 @@
     #address-cells = <1>;
   
     images {
-        kernel@0 {
-            description = "Linux Kernel";
-            data = /incbin/("/boot/vmlinuz-4.9.0-9-2-arm64");
+        kernel_ac5x {
+            description = "Linux Kernel for AC5x";
+            data = /incbin/("/boot/vmlinuz-5.10.0-18-2-arm64");
             type = "kernel";
             arch = "arm64";
             os = "linux";
             compression = "none";
-            load = <0x6000000>;
-            entry = <0x6000000>;
+            load = <0x2 0x2080000>;
+            entry = <0x2 0x2080000>;
             hash@1 {
                 algo = "sha1";
             };
         };
-        fdt@0 {
-            description = "Flattened Device Tree blob";
-            data = /incbin/("/boot/armada-7020-comexpress.dtb");
+        fdt_ac5x {
+            description = "Flattened Device Tree blob for AC5x";
+            data = /incbin/("/usr/lib/linux-image-5.10.0-18-2-arm64/marvell/ac5-98dx35xx-rd.dtb");
             type = "flat_dt";
             arch = "arm64";
             compression = "none";
+            load = <0x2 0x1000000>;
+            hash@1 {
+                algo = "sha1";
+            };
+        };
+        ramdisk_ac5x {
+            description = "ramdisk for AC5x";
+            data = /incbin/("/boot/initrd.img-5.10.0-18-2-arm64");
+            type = "ramdisk";
+            arch = "arm64";
+            os = "linux";
+            compression = "gzip";
+            load = <0x2 0x6000000>;
+            entry = <0x2 0x6000000>;
+            hash@1 {
+                algo = "sha1";
+            };
+        };
+        kernel_1 {
+            description = "Linux Kernel";
+            data = /incbin/("/boot/vmlinuz-5.10.0-18-2-arm64");
+            type = "kernel";
+            arch = "arm64";
+            os = "linux";
+            compression = "none";
+            load = <0x2000000>;
+            entry = <0x2000000>;
             hash@1 {
                 algo = "sha1";
             };
         };
-        ramdisk@0 {
+        ramdisk_1 {
             description = "ramdisk";
-            data = /incbin/("/boot/initrd.img-4.9.0-9-2-arm64");
+            data = /incbin/("/boot/initrd.img-5.10.0-18-2-arm64");
             type = "ramdisk";
             arch = "arm64";
             os = "linux";
             compression = "gzip";
+            load = <0x6000000>;
+            entry = <0x6000000>;
+            hash@1 {
+                algo = "sha1";
+            };
+        };
+        fdt_cn9131 {
+            description = "Flattened Device Tree blob";
+            data = /incbin/("/boot/cn9131-db-comexpress.dtb");
+            type = "flat_dt";
+            arch = "arm64";
+            compression = "none";
+            load = <0x1000000>;
+            entry = <0x1000000>;
             hash@1 {
                 algo = "sha1";
             };
         };
     };
     configurations {
-        default = "conf@1";
-        conf@1 {
-            description = "Boot Linux kernel with FDT blob + ramdisk";
-            kernel = "kernel@0";
-            fdt = "fdt@0";
-            ramdisk = "ramdisk@0";
+        default = "conf_ac5x";
+        conf_ac5x {
+            description = "Boot Linux kernel with FDT blob + ramdisk for RD_AC5x";
+            kernel = "kernel_ac5x";
+            fdt = "fdt_ac5x";
+            ramdisk = "ramdisk_ac5x";
             hash@1 {
                 algo = "sha1";
             };
         };
-    };
+        conf_cn9131 {
+            description = "Boot Linux kernel with FDT blob + ramdisk for CN9131";
+            kernel = "kernel_1";
+            fdt = "fdt_cn9131";
+            ramdisk = "ramdisk_1";
+            hash@1 {
+                algo = "sha1";
+            };
+        };
+   };
 };
-- 
2.25.1

