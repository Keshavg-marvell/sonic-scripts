diff --git a/files/initramfs-tools/modules.arm b/files/initramfs-tools/modules.arm
index a923920b..f00e5ecc 100644
--- a/files/initramfs-tools/modules.arm
+++ b/files/initramfs-tools/modules.arm
@@ -2,6 +2,16 @@ crc16
 deflate
 zlib_deflate
 m25p80
+marvell_nand
 ubi
 ubifs
 squashfs
+i2c_mv64xxx
+ar7part
+ofpart
+mtdblock
+mtdblock_ro
+mtdswap
+mtdoops
+mtd_blkdevs
+adt7475
diff --git a/platform/marvell-armhf/platform.conf b/platform/marvell-armhf/platform.conf
index 7799b33d..2d3be31d 100644
--- a/platform/marvell-armhf/platform.conf
+++ b/platform/marvell-armhf/platform.conf
@@ -10,28 +10,46 @@ fdt_addr=0x1000000
 initrd_addr=0x2000000
 VAR_LOG=512
 
-kernel_fname="/boot/vmlinuz-4.9.0-9-2-armmp"
-initrd_fname="/boot/initrd.img-4.9.0-9-2-armmp"
+kernel_fname="/boot/vmlinuz-4.19.0-6-2-armmp"
+initrd_fname="/boot/initrd.img-4.19.0-6-2-armmp"
 fdt_fname="/boot/armada-385-ET6448M_4G_Nand.dtb"
 
+if [ "$install_env" = "onie" ]; then
+    MACH_FILE="/etc/machine.conf"
+else
+    MACH_FILE="/host/machine.conf"
+fi
+# armhf-marvell_et6448m_52x-r0  - Platform = Et6448M
+PLATFORM=`sed -n 's/onie_platform=\(.*\)/\1/p' $MACH_FILE`
+echo "Intalling SONiC from $install_env on Platform $PLATFORM"
+
 # global mount defines
-demo_dev=ubi0
-mtd_dev=/dev/$(cat /proc/mtd | grep "SONIC" | grep -o "mtd[0-9]")
-mtd_num=$(echo $mtd_dev | grep -o "[0-9]")
+if [ "$PLATFORM" = "armhf-marvell_et6448m_52x-r0" ]; then
+    demo_dev=ubi0
+    mtd_dev=/dev/$(cat /proc/mtd | grep "SONIC" | grep -o "mtd[0-9]")
+    mtd_num=$(echo $mtd_dev | grep -o "[0-9]")
+
+    fdt_fname="/boot/armada-385-ET6448M_4G_Nand.dtb"
+
+    BOOTARGS='setenv bootargs root='$demo_dev' rw rootwait ubi.mtd='$mtd_num' rootfstype=ubifs panic=1 console=ttyS0,115200 ${othbootargs} ${mtdparts} ${linuxargs}'
+    UBI_LOAD='run ubi_sonic_boot_mount_ubi; ubifsload $kernel_addr $image_name;ubifsload $fdt_addr $fdt_name; ubifsload $initrd_addr $initrd_name'
+    BOOTARGS_OLD='setenv bootargs root='$demo_dev' rw rootwait ubi.mtd='$mtd_num' rootfstype=ubifs panic=1 console=ttyS0,115200 ${othbootargs} ${mtdparts} ${linuxargs_old}'
+    UBI_LOAD_OLD='run ubi_sonic_boot_mount_ubi; ubifsload $kernel_addr $image_name_old;ubifsload $fdt_addr $fdt_name_old; ubifsload $initrd_addr $initrd_name_old'
+    UBIBOOTCMD='run ubi_sonic_boot_bootargs; run ubi_sonic_boot_load; test -n "$boot_once" && setenv boot_once "" && saveenv; bootz $kernel_addr $initrd_addr $fdt_addr'
+    UBIBOOTCMD_OLD='run ubi_sonic_boot_bootargs_old; run ubi_sonic_boot_load_old; test -n "$boot_once" && setenv boot_once "" && saveenv; bootz $kernel_addr $initrd_addr $fdt_addr'
+    LINUX_MISC_CMD='apparmor=1 security=apparmor usbcore.autosuspend=-1'
+
+else
+    echo "Unsupported Platform $PLAFORM"
+    exit 2
+fi
 demo_mnt=/tmp
 FW_ENV_DEFAULT='/dev/mtd0 0x00500000 0x80000 0x100000 8'
 UBOOT_FW_DEFAULT=1
 
-# Skip VID Header in UBIFS
-BOOTARGS='setenv bootargs root='$demo_dev' rw rootwait ubi.mtd='$mtd_num',8192 rootfstype=ubifs panic=1 console=ttyS0,115200 ${othbootargs} ${mtdparts} ${linuxargs}'
-UBI_LOAD='run ubi_sonic_boot_mount_ubi; ubifsload $kernel_addr $image_name;ubifsload $fdt_addr $fdt_name; ubifsload $initrd_addr $initrd_name'
-BOOTARGS_OLD='setenv bootargs root='$demo_dev' rw rootwait ubi.mtd='$mtd_num',8192 rootfstype=ubifs panic=1 console=ttyS0,115200 ${othbootargs} ${mtdparts} ${linuxargs_old}'
-UBI_LOAD_OLD='run ubi_sonic_boot_mount_ubi; ubifsload $kernel_addr $image_name_old;ubifsload $fdt_addr $fdt_name_old; ubifsload $initrd_addr $initrd_name_old'
-UBIBOOTCMD='run ubi_sonic_boot_bootargs; run ubi_sonic_boot_load; test -n "$boot_once" && setenv boot_once "" && saveenv; bootz $kernel_addr $initrd_addr $fdt_addr'
-UBIBOOTCMD_OLD='run ubi_sonic_boot_bootargs_old; run ubi_sonic_boot_load_old; test -n "$boot_once" && setenv boot_once "" && saveenv; bootz $kernel_addr $initrd_addr $fdt_addr'
-LINUX_MISC_CMD='apparmor=1 security=apparmor usbcore.autosuspend=-1'
-
 prepare_boot_menu() {
+    echo "Sync up cache ..."
+    sync
     echo "Setting up U-Boot environment..."
 
     DTB_HAS_ENV_BLK=$(grep uboot-env /proc/mtd | sed -e 's/:.*$//')
@@ -68,6 +86,7 @@ prepare_boot_menu() {
         echo $FW_ENV_DEFAULT > /etc/fw_env.config
         echo "Using pre-configured uboot env"
     fi
+
     image_name=${image_dir}${kernel_fname}
     initrd_name=${image_dir}${initrd_fname}
     fdt_name=${image_dir}${fdt_fname}
@@ -104,8 +123,8 @@ prepare_boot_menu() {
     BORDER='echo "---------------------------------------------------";echo;'
     fw_setenv ${FW_ARG} print_menu $BORDER $BOOT1 $BOOT2 $BOOT3 $BORDER > /dev/null
 
-    fw_setenv ${FW_ARG} linuxargs "net.ifnames=0 loopfstype=squashfs loop=$image_dir/$FILESYSTEM_SQUASHFS varlog_size=$VAR_LOG" > /dev/null
-    fw_setenv ${FW_ARG} linuxargs_old "net.ifnames=0 loopfstype=squashfs loop=$image_dir_old/$FILESYSTEM_SQUASHFS varlog_size=$VAR_LOG" > /dev/null
+    fw_setenv ${FW_ARG} linuxargs "net.ifnames=0 loopfstype=squashfs loop=$image_dir/$FILESYSTEM_SQUASHFS varlog_size=$VAR_LOG apparmor=0 " > /dev/null
+    fw_setenv ${FW_ARG} linuxargs_old "net.ifnames=0 loopfstype=squashfs loop=$image_dir_old/$FILESYSTEM_SQUASHFS varlog_size=$VAR_LOG apparmor=0 " > /dev/null
 
     # Set boot configs
     fw_setenv ${FW_ARG} kernel_addr $kernel_addr > /dev/null
@@ -151,7 +170,10 @@ create_ubi_partition() {
 
 create_partition() {
     # Platform speicific partition 
-    create_ubi_partition
+    if [ "$PLATFORM" = "armhf-marvell_et6448m_52x-r0" ]; then
+        echo "Doing UBI partition"
+        create_ubi_partition
+    fi
 }
 
 mount_partition() {
@@ -162,10 +184,12 @@ mount_partition() {
     }
 
     echo "Mounting $demo_dev on $demo_mnt "
-    trap_push "${onie_bin} umount /dev/ubi0_0|| true"
-    mount -t ubifs /dev/ubi0_0 $demo_mnt || {
-        echo "Failed"
-    }
+    if [ "$PLATFORM" = "armhf-marvell_et6448m_52x-r0" ]; then
+        trap_push "${onie_bin} umount /dev/ubi0_0|| true"
+        mount -t ubifs /dev/ubi0_0 $demo_mnt || {
+            echo "mount -t ubifs /dev/ubi0_0 $demo_mnt Failed"
+        }
+    fi
 }
 
 bootloader_menu_config() {
